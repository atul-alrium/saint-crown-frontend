name: Deploy Frontend to Staging

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Zip the dist folder
        run: zip -r dist.zip dist

      - name: Upload dist.zip to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          source: dist.zip
          target: /home/${{ secrets.SSH_USERNAME }}/

      - name: SSH into server and safely deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            set -e  # Stop script on any error

            # Define vars
            WORK_DIR="/home/${{ secrets.SSH_USERNAME }}"
            DEPLOY_DIR="${{ secrets.FRONTEND_DEPLOY_PATH }}"
            BACKUP_DIR="${DEPLOY_DIR}_bak_$(date +%Y%m%d_%H%M%S)"
            TMP_DIR="${WORK_DIR}/dist_temp"

            # Prepare
            cd $WORK_DIR
            echo "Unzipping new build..."
            unzip -o dist.zip -d $TMP_DIR

            # Backup existing deployment
            if [ -d "$DEPLOY_DIR" ]; then
              echo "Backing up current deployment to $BACKUP_DIR"
              sudo cp -r $DEPLOY_DIR $BACKUP_DIR
            fi

            # Deploy new build
            echo "Deploying new build to $DEPLOY_DIR"
            sudo rm -rf $DEPLOY_DIR/*
            sudo mv $TMP_DIR/dist/* $DEPLOY_DIR/

            # Cleanup
            rm -rf $TMP_DIR dist.zip

            # (Optional) Reload NGINX if needed
            # echo "Reloading NGINX..."
            # sudo systemctl reload nginx
